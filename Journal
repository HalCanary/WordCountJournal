#!/usr/bin/env python

# WordCountJournal
# Copyright 2013 Hal Canary
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import datetime
import os
import PyQt4.QtGui
import PyQt4.QtCore

class SingleFileEditor(PyQt4.QtGui.QMainWindow):
	def __init__(self, filename, WindowTitle):
		super(SingleFileEditor, self).__init__(None)
		self.setWindowIcon(PyQt4.QtGui.QIcon(
				PyQt4.QtGui.QIcon.fromTheme("text")))
		self.filename = filename

		self.setWindowTitle(WindowTitle)
		self.textEdit = PyQt4.QtGui.QTextEdit(self)
		self.textEdit.setAcceptRichText(False)
		self.statusBar = PyQt4.QtGui.QStatusBar()
		self.statusBar.showMessage('saved')

		self.wordCount = PyQt4.QtGui.QLabel()

		self.statusBar.setStyleSheet(
			"QStatusBar, QLabel {"
			"background-color:rgb(64, 64, 64); "
			"color: rgb(255, 255, 255); }" )

		self.statusBar.addPermanentWidget(self.wordCount)

		self.textEdit.setFontPointSize(14)
		self.textEdit.setStyleSheet(
			"QTextEdit {"
			"background-color:rgb(0, 0, 0); "
			"color: rgb(255, 255, 255); "
			"border-style: outset; "
			"border-width: 2px; "
			"border-color: rgb(31, 31, 31); }")
		try:
			with open(self.filename, 'rU') as f:
				self.textEdit.setPlainText(unicode(f.read(),'utf8'))
		except (IOError,):
			pass # file does not exist
		self.updateWordCount()

		self.textEdit.connect(
			self.textEdit,PyQt4.QtCore.SIGNAL("textChanged()"),
			self.textHasChanged)

		def makeAction(widget, shortcut, signal, function):
			action = PyQt4.QtGui.QAction(self)
			widget.addAction(action)
			action.setShortcut(shortcut)
			action.connect(action, PyQt4.QtCore.SIGNAL(signal), function)
		makeAction(self, 'Ctrl+Q', 'triggered()', self.close)
		makeAction(self, 'Ctrl+S', 'triggered()', self.saveFile)

		self.resize(500, 500)
		self.setCentralWidget(self.textEdit)
		self.setStatusBar(self.statusBar)
		self.show()
		self.showMaximized()

	def textHasChanged(self):
		self.updateWordCount()
		self.statusBar.showMessage('* unsaved *')

	def updateWordCount(self):
		v = str(self.textEdit.toPlainText().toUtf8())
		s = sum(len(l.split()) for l in v.split('\n'))
		self.wordCount.setText("Word Count: %s" % s)

	def closeEvent(self, event):
		self.saveFile()

	def saveFile(self):
		v = str(self.textEdit.toPlainText().toUtf8())
		if len(v) > 0 and v[-1] != '\n':
			v = v + '\n'
		try:
			os.makedirs(os.path.dirname(self.filename))
		except (OSError,):
			pass # directory already exists
		with open(self.filename,'w') as f:
			f.write(v)
		self.statusBar.showMessage('saved')

def Journal():
	today = datetime.date.today()
	path = os.path.join(
		os.path.expanduser("~"), 'Documents', 'Journal',
		str(today.year), 'journal-%s.txt' % today.isoformat())
	title = 'WordCountJournal: ' + path.replace(os.path.expanduser('~'),'~')
	return SingleFileEditor(path, title)

if __name__ == '__main__':
	app = PyQt4.QtGui.QApplication([])
	journal = Journal()
	app.exec_()
